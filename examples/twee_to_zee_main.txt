This is very much a work in progress, I plan to have it done by noon Friday.

Routine main, 0 local
//first, call the start-Passage routine
        CALL start
//now successively check whether the global variable nextPassage equals one of the corresponding passages
L0000:  JNE nextPassage,"1" L0001
        //yay, let's call the passage, let it run, read, love, live and then return back here
        CALL start
        //after that we will se where to go next, so we start the whole process again
        J L0000
//if nextPAssage didn't match "1", we will continue
L0001:  JNE nextPassage,"2" L0002
        CALL passageZwei
        J L0000
L0002:  JNE nextPassage,"3" L0003
        CALL passageDrei
        J L0000
//ende of calling, if this happened, there could have been a problem with the passage links
//this sort of error we should probably filter out in the analysis, see if every Link checks out
L0003:  PRINT "Could not find the next Passage from user Input"

//idea for handling wrong input: we save the origin of the input query, after coming at the end, we will write prevPassa
ge onto nextPassage with a corresponding error message/error message flag, so we can say that the input was wrong.

Routine start, 0 local
        PRINT "Start"
        AREAD
        //here we should check if the input is of the right links, so we can't just jump anywhere
        //if it isn't override it with an error thingy

        //return
Routine passageZwei, 0 local
    //we should load some global variables in here, such as... LinkTexts, LinkPassages
		LOAD 		LinkText1
		LOAD 		LinkTest2
		LOAD 		LinkText3
L0000   PRINT 		"PassagenText2"
		NEWLINE
		//TODO: LinkPrintRoutine: takes all the LinkTexts and prints the availabe Linkoptions at the End of the Passagetext
		CALL 		LinkPrintRoutine
		AREAD		G6d, input
		//TODO: the fuck does G6d do?
        //check if the input was one of the predefined LinkTexts
        JE 			input, LinkText1,LinkText2,LinkText3 L0001
        PRINT 		"I do not understand your action, try again."
		JP			L0000
        //multiple JE if more than... LinkTexts
        //now match LinkText to LinkPassages, load it into the nextPassage Variable, this should be done by a routine
L0001:  call LinkTextMatcher LinkText
        //LinkTextMatcher should write into the nextPassage global Variable
        //return
