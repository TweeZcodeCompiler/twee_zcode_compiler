	.INSERT "empty_freq"
	.INSERT "empty_data"

	.FUNCT GO
START::
	CRLF
	CRLF
	PRINTI "INTRODUCTORY TEXT!"
	CRLF
	CRLF
	CALL V-VERSION
	CRLF
	SET 'HERE,STARTROOM
	MOVE PLAYER,HERE
	CALL V-LOOK
?L3:	CALL PARSER >STACK
	ZERO? STACK /?L7
	CALL PERFORM,PRSA,PRSO,PRSI
	GETP HERE,P?ACTION >STACK
	CALL STACK,M-END >STACK
	EQUAL? PRSA,V?QUIT,V?VERSION,V?WAIT /?L7
	EQUAL? PRSA,V?SAVE,V?RESTORE,V?INVENTORY /?L7
	EQUAL? PRSA,V?UNDO /?L7
	CALL CLOCKER
?L7:	LOC WINNER >HERE
	JUMP ?L3

	.FUNCT CHKWORD?,W,PS,P1=-1,F
	ZERO? W /FALSE
	GETB W,VOCAB-FL >F
	BTST F,PS \?L8
	LESS? P1,0 /TRUE
	BAND F,P1MASK >STACK
	EQUAL? STACK,P1 \?L12
	GETB W,VOCAB-V1 >F
	RETURN F
?L12:	GETB W,VOCAB-V2 >F
	RETURN F
?L8:	SET 'F,0
	RETURN F

	.FUNCT GETWORD?,N,R
	MUL N,2 >STACK
	DEC 'STACK
	GET LEXBUF,STACK >R
	RETURN R

	.FUNCT PRINT-WORD,N,I,MAX
	MUL N,4 >STACK
	INC 'STACK
	GETB LEXBUF,STACK >I
	MUL N,4 >STACK
	GETB LEXBUF,STACK >STACK
	ADD I,STACK >STACK
	SUB STACK,1 >MAX
?L1:	GETB READBUF,I >STACK
	PRINTC STACK
	IGRTR? 'I,MAX \?L1
	RTRUE

	.FUNCT PARSER,NOBJ,VAL,DIR,I,W
	SET 'NOBJ,0
	SET 'VAL,0
	SET 'DIR,0
	LOC PLAYER >HERE
	CALL READLINE
	GETB LEXBUF,1 >P-LEN
	SET 'P-V,0
	SET 'P-NOBJ,0
	PUT P-DOBJS,0,0
	PUT P-IOBJS,0,0
	SET 'P-P1,0
	SET 'P-P2,0
	LOC WINNER >HERE
	SET 'I,1
?L3:	GRTR? I,P-LEN /?L4
	CALL GETWORD?,I >W
	ZERO? W \?L7
	PRINTI "I don't know the word """
	CALL PRINT-WORD,I
	PRINTI """."
	CRLF
	RFALSE
?L7:	CALL CHKWORD?,W,PS?VERB >STACK
	ZERO? STACK /?L11
	ZERO? P-V \?L11
	CALL CHKWORD?,W,PS?VERB,P1?VERB >P-V
	JUMP ?L33
?L11:	EQUAL? P-V,0,ACT?WALK \?L14
	CALL CHKWORD?,W,PS?DIRECTION,P1?DIRECTION >VAL
	ZERO? VAL /?L14
	SET 'DIR,VAL
	JUMP ?L33
?L14:	CALL CHKWORD?,W,PS?PREPOSITION,0 >VAL
	ZERO? VAL /?L16
	ZERO? NOBJ \?L17
	ZERO? P-P1 \?L17
	SET 'P-P1,VAL
	JUMP ?L33
?L17:	EQUAL? NOBJ,1 \?L33
	ZERO? P-P2 \?L33
	SET 'P-P2,VAL
	JUMP ?L33
?L16:	CALL STARTS-CLAUSE?,W >STACK
	ZERO? STACK /?L21
	INC 'NOBJ
	EQUAL? NOBJ,1 \?L22
	CALL MATCH-CLAUSE,I,P-DOBJS,P-DOBJEX >VAL
	JUMP ?L25
?L22:	EQUAL? NOBJ,2 \?L24
	CALL MATCH-CLAUSE,I,P-IOBJS,P-IOBJEX >VAL
	JUMP ?L25
?L24:	PRINTI "That sentence has too many objects."
	CRLF
	RFALSE
?L25:	ZERO? VAL /?L28
	SET 'I,VAL
	JUMP ?L3
?L28:	PRINTI "That noun clause didn't make sense."
	CRLF
	RFALSE
?L21:	PRINTI "I didn't expect the word """
	CALL PRINT-WORD,I
	PRINTI """ there."
	CRLF
	RFALSE
?L33:	INC 'I
	JUMP ?L3
?L4:	SET 'P-NOBJ,NOBJ
	ZERO? DIR /?L38
	SET 'PRSO-DIR,1
	SET 'PRSA,V?WALK
	SET 'PRSO,DIR
	SET 'PRSI,0
	RTRUE
?L38:	ZERO? P-V \?L40
	PRINTI "That sentence has no verb."
	CRLF
	RFALSE
?L40:	SET 'PRSO-DIR,0
	CALL MATCH-SYNTAX >STACK
	ZERO? STACK /FALSE
	CALL FIND-OBJECTS >STACK
	ZERO? STACK /FALSE
	ZERO? IT-USE \?L46
	ZERO? PRSO /?L46
	FSET? PRSO,PERSONBIT /?L46
	FSET? PRSO,PLURALBIT /?L46
	CALL COPY-TABLE,P-DOBJS,P-DOBJS-BACK,21
	CALL COPY-TABLE,P-DOBJEX,P-DOBJEX-BACK,21
	ZERO? IT-ONCE \TRUE
	SET 'IT-ONCE,1
	RTRUE
?L46:	ZERO? THEM-USE \?L51
	ZERO? PRSO /?L51
	FSET? PRSO,PERSONBIT /?L51
	FSET? PRSO,PLURALBIT \?L51
	CALL COPY-TABLE,P-DOBJS,P-TOBJS-BACK,21
	CALL COPY-TABLE,P-DOBJEX,P-TOBJEX-BACK,21
	ZERO? THEM-ONCE \TRUE
	SET 'THEM-ONCE,1
	RTRUE
?L51:	ZERO? HIM-USE \?L55
	ZERO? PRSO /?L55
	FSET? PRSO,PERSONBIT \?L55
	FSET? PRSO,FEMALEBIT /?L55
	CALL COPY-TABLE,P-DOBJS,P-MOBJS-BACK,21
	CALL COPY-TABLE,P-DOBJEX,P-MOBJEX-BACK,21
	ZERO? HIM-ONCE \TRUE
	SET 'HIM-ONCE,1
	RTRUE
?L55:	ZERO? HER-USE \TRUE
	ZERO? PRSO /TRUE
	FSET? PRSO,PERSONBIT \TRUE
	FSET? PRSO,FEMALEBIT \TRUE
	CALL COPY-TABLE,P-DOBJS,P-FOBJS-BACK,21
	CALL COPY-TABLE,P-DOBJEX,P-FOBJEX-BACK,21
	ZERO? HER-ONCE \TRUE
	SET 'HER-ONCE,1
	RTRUE

	.FUNCT COPY-TABLE,T,C,S,N,W
	SET 'N,1
?L1:	GETB T,N >W
	PUTB C,N,W
	IGRTR? 'N,S \?L1
	RTRUE

	.FUNCT STARTS-CLAUSE?,W,?TMP
	EQUAL? W,W?A,W?AN,W?THE /?L3
	SET '?TMP,0
	JUMP ?L2
?L3:	SET '?TMP,1
	RETURN ?TMP
?L2:	CALL CHKWORD?,W,PS?ADJECTIVE >?TMP
	ZERO? ?TMP /?L5
	RETURN ?TMP
?L5:	CALL CHKWORD?,W,PS?OBJECT,P1?OBJECT >STACK
	RSTACK

	.FUNCT MATCH-CLAUSE,WN,YTBL,NTBL,TI=1,W,VAL,MODE=0,ADJ=0,NOUN=0,BUT=0,NW
?L0:	GRTR? WN,P-LEN /?L2
	CALL GETWORD?,WN >W
	ZERO? W /FALSE
	EQUAL? W,W?ALL,W?ANY,W?ONE \?L6
	ZERO? MODE \FALSE
	ZERO? ADJ \FALSE
	ZERO? NOUN \FALSE
	EQUAL? W,W?ALL \?L11
	SET 'MODE,MCM-ALL
	JUMP ?L40
?L11:	SET 'MODE,MCM-ANY
	JUMP ?L40
?L6:	CALL CHKWORD?,W,PS?ADJECTIVE,P1?ADJECTIVE >VAL
	PUSH VAL
	ZERO? STACK /?L14
	ZERO? NOUN \?L15
	CALL CHKWORD?,W,PS?OBJECT,P1?OBJECT >STACK
	ZERO? STACK /?L15
	EQUAL? WN,P-LEN /?L17
	ADD WN,1 >STACK
	CALL GETWORD?,STACK >NW
	CALL CHKWORD?,W,PS?ADJECTIVE >STACK
	ZERO? STACK \?L20
	CALL CHKWORD?,W,PS?OBJECT >STACK
	ZERO? STACK \?L20
	PUSH 1
	JUMP ?L21
?L20:	PUSH 0
?L21:	ZERO? STACK /?L15
?L17:	SET 'NOUN,W
	JUMP ?L40
?L15:	EQUAL? TI,P-MAXOBJS \?L22
	PRINTI "That clause mentions too many objects."
	CRLF
	RFALSE
?L22:	ZERO? ADJ \?L40
	SET 'ADJ,VAL
	JUMP ?L40
?L14:	CALL CHKWORD?,W,PS?OBJECT,P1?OBJECT >STACK
	ZERO? STACK /?L27
	ZERO? NOUN \?L2
	EQUAL? TI,P-MAXOBJS \?L30
	PRINTI "That clause mentions too many objects."
	CRLF
	RFALSE
?L30:	SET 'NOUN,W
	JUMP ?L40
?L27:	EQUAL? W,W?AND,W?COMMA \?L34
	ZERO? ADJ \?L37
	ZERO? NOUN /?L40
?L37:	PUT YTBL,TI,ADJ
	ADD TI,1 >STACK
	PUT YTBL,STACK,NOUN
	SET 'NOUN,0
	SET 'ADJ,NOUN
	ADD TI,2 >TI
	JUMP ?L40
?L34:	CALL CHKWORD?,W,PS?BUZZ-WORD >STACK
	ZERO? STACK /?L2
?L40:	INC 'WN
	JUMP ?L0
?L2:	ZERO? ADJ \?L43
	ZERO? NOUN /?L41
?L43:	PUT YTBL,TI,ADJ
	ADD TI,1 >STACK
	PUT YTBL,STACK,NOUN
	ADD TI,2 >TI
?L41:	SUB TI,1 >STACK
	DIV STACK,2 >STACK
	PUTB YTBL,0,STACK
	PUTB YTBL,1,MODE
	RETURN WN

	.FUNCT MATCH-SYNTAX,PTR,CNT,TEST-PTR,TEST-P-NOBJ
	SUB 255,P-V >STACK
	GET VERBS,STACK >PTR
	GETB PTR,0 >CNT
	INC 'PTR
?L1:	GET PTR,SYN-NOBJ >TEST-PTR
	SET 'TEST-P-NOBJ,P-NOBJ
	DLESS? 'CNT,0 \?L7
	PRINTI "I don't understand that sentence."
	CRLF
	RFALSE
?L7:	GETB PTR,SYN-NOBJ >STACK
	EQUAL? STACK,P-NOBJ \?L11
	LESS? P-NOBJ,1 /?L12
	GETB PTR,SYN-PREP1 >STACK
	EQUAL? STACK,P-P1 \?L11
?L12:	LESS? P-NOBJ,2 /?L13
	GETB PTR,SYN-PREP2 >STACK
	EQUAL? STACK,P-P2 \?L11
?L13:	GETB PTR,SYN-ACTION >PRSA
	RTRUE
?L11:	ADD PTR,SYN-REC-SIZE >PTR
	JUMP ?L1

	.FUNCT FIND-OBJECTS,X
	LESS? P-NOBJ,1 /?L1
	GET P-DOBJS,2 >X
	EQUAL? X,W?IT \?L3
	LESS? IT-ONCE,1 \?L5
	PRINTI "I'm unsure what you're referring to."
	CRLF
	RFALSE
?L5:	CALL COPY-TABLE,P-DOBJS-BACK,P-DOBJS,21
	CALL COPY-TABLE,P-DOBJEX-BACK,P-DOBJEX,21
	SET 'IT-USE,1
	JUMP ?L10
?L3:	SET 'IT-USE,0
?L10:	EQUAL? X,W?THEM \?L11
	LESS? THEM-ONCE,1 \?L13
	PRINTI "I'm unsure what you're referring to."
	CRLF
	RFALSE
?L13:	CALL COPY-TABLE,P-TOBJS-BACK,P-DOBJS,21
	CALL COPY-TABLE,P-TOBJEX-BACK,P-DOBJEX,21
	SET 'THEM-USE,1
	JUMP ?L18
?L11:	SET 'THEM-USE,0
?L18:	EQUAL? X,W?HIM \?L19
	ZERO? HIM-ONCE \?L21
	PRINTI "I'm unsure to whom you are referring."
	CRLF
	RFALSE
?L21:	CALL COPY-TABLE,P-MOBJS-BACK,P-DOBJS,21
	CALL COPY-TABLE,P-MOBJEX-BACK,P-DOBJEX,21
	SET 'HIM-USE,1
	JUMP ?L26
?L19:	SET 'HIM-USE,0
?L26:	EQUAL? X,W?HER \?L27
	ZERO? HER-ONCE \?L29
	PRINTI "I'm unsure to whom you are referring."
	CRLF
	RFALSE
?L29:	CALL COPY-TABLE,P-FOBJS-BACK,P-DOBJS,21
	CALL COPY-TABLE,P-FOBJEX-BACK,P-DOBJEX,21
	SET 'HER-USE,1
	JUMP ?L34
?L27:	SET 'HER-USE,0
?L34:	CALL FIND-ONE-OBJ,P-DOBJS,P-DOBJEX >PRSO
	ZERO? PRSO \?L38
	RFALSE
?L1:	SET 'PRSO,0
?L38:	LESS? P-NOBJ,2 /?L39
	GET P-IOBJS,2 >X
	EQUAL? X,W?IT \?L41
	CALL COPY-TABLE,P-DOBJS-BACK,P-IOBJS,21
	CALL COPY-TABLE,P-DOBJEX-BACK,P-IOBJEX,21
	SET 'IT-USE,1
	JUMP ?L43
?L41:	SET 'IT-USE,0
?L43:	EQUAL? X,W?THEM \?L44
	CALL COPY-TABLE,P-TOBJS-BACK,P-IOBJS,21
	CALL COPY-TABLE,P-TOBJEX-BACK,P-IOBJEX,21
	SET 'THEM-USE,1
	JUMP ?L46
?L44:	SET 'THEM-USE,0
?L46:	EQUAL? X,W?HIM \?L47
	CALL COPY-TABLE,P-MOBJS-BACK,P-IOBJS,21
	CALL COPY-TABLE,P-MOBJEX-BACK,P-IOBJEX,21
	SET 'HIM-USE,1
	JUMP ?L49
?L47:	SET 'HIM-USE,0
?L49:	EQUAL? X,W?HER \?L50
	CALL COPY-TABLE,P-FOBJS-BACK,P-IOBJS,21
	CALL COPY-TABLE,P-FOBJEX-BACK,P-IOBJEX,21
	SET 'HER-USE,1
	JUMP ?L52
?L50:	SET 'HER-USE,0
?L52:	CALL FIND-ONE-OBJ,P-IOBJS,P-IOBJEX >PRSI
	ZERO? PRSI \TRUE
	RFALSE
?L39:	SET 'PRSI,0
	RTRUE

	.FUNCT SEARCH-FOR-LIGHT,F,G,H,GMAX,X,I
	FIRST? WINNER >I \?L3
?L66:	FSET? I,LIGHTBIT \?L6
	SET 'F,I
	RTRUE
?L6:	FSET? I,SURFACEBIT /?L11
	FSET? I,OPENABLE \?L12
	FSET? I,OPENBIT /?L11
?L12:	FSET? I,CONTBIT \?L9
	FSET? I,OPENABLE \?L11
	FSET? I,CONTBIT \?L9
	FSET? I,TRANSBIT \?L9
?L11:	CALL CONTAINER-LIGHT-SEARCH,I >F
	ZERO? F \TRUE
	PUSH 0
	JUMP ?L10
?L9:	PUSH 0
?L10:	ZERO? STACK /?L8
?L8:	NEXT? I >I /?L66
?L3:	ZERO? F \TRUE
	FIRST? HERE >I \?L24
?L67:	FSET? I,LIGHTBIT \?L27
	SET 'F,I
	JUMP ?L24
?L27:	FSET? I,SURFACEBIT /?L32
	FSET? I,OPENBIT /?L32
	FSET? I,CONTBIT \?L30
	FSET? I,TRANSBIT /?L32
	FSET? I,CONTBIT \?L30
	FSET? I,OPENABLE /?L30
?L32:	CALL CONTAINER-LIGHT-SEARCH,I >F
	ZERO? F \TRUE
	PUSH 0
	JUMP ?L31
?L30:	PUSH 0
?L31:	ZERO? STACK /?L29
?L29:	NEXT? I >I /?L67
?L24:	ZERO? F \TRUE
	FIRST? GLOBAL-OBJECTS >I \?L44
?L68:	FSET? I,LIGHTBIT \?L47
	SET 'F,I
	JUMP ?L44
?L47:	NEXT? I >I /?L68
?L44:	ZERO? F /?L52
	RETURN F
?L52:	FIRST? LOCAL-GLOBALS >I \?L56
?L69:	FSET? I,LIGHTBIT \?L59
	CALL GLOBAL-IN?,I,HERE >STACK
	ZERO? STACK /?L59
	SET 'F,I
	JUMP ?L56
?L59:	NEXT? I >I /?L69
?L56:	ZERO? F \TRUE
	RFALSE

	.FUNCT CONTAINER-LIGHT-SEARCH,I,J,F,J?1
	FIRST? I >J?1 \?L3
?L18:	FSET? J?1,LIGHTBIT \?L6
	SET 'F,J?1
	JUMP ?L3
?L6:	FSET? J?1,SURFACEBIT /?L9
	FSET? J?1,OPENABLE \?L10
	FSET? J?1,OPENBIT /?L9
?L10:	FSET? J?1,CONTBIT \?L11
	FSET? J?1,OPENABLE /?L11
?L9:	CALL CONTAINER-LIGHT-SEARCH,J?1 >F
	ZERO? F \?L17
?L11:	NEXT? J?1 >J?1 /?L18
?L3:	ZERO? F /FALSE
?L17:	RETURN F

	.FUNCT FIND-ONE-OBJ,YTBL,NTBL,A,N,F,G,H,GMAX,X,P,I,J
	GET YTBL,1 >A
	GET YTBL,2 >N
	FIRST? GENERIC-OBJECTS >I \?L5
?L113:	CALL REFERS?,A,N,I >STACK
	ZERO? STACK /?L8
	SET 'F,I
	JUMP ?L5
?L8:	NEXT? I >I /?L113
?L5:	ZERO? F /?L13
	RETURN F
?L13:	FSET? HERE,LIGHTBIT /?L17
	CALL SEARCH-FOR-LIGHT >STACK
	ZERO? STACK \?L17
	PRINTI "It's too dark to see anything here."
	CRLF
	RFALSE
?L17:	FIRST? HERE >I \?L25
?L114:	CALL REFERS?,A,N,I >STACK
	ZERO? STACK /?L28
	SET 'F,I
	JUMP ?L25
?L28:	FSET? I,SURFACEBIT /?L33
	FSET? I,OPENABLE \?L34
	FSET? I,OPENBIT /?L33
?L34:	FSET? I,CONTBIT \?L31
	FSET? I,OPENABLE \?L33
	FSET? I,CONTBIT \?L31
	FSET? I,TRANSBIT \?L31
?L33:	CALL CONTAINER-SEARCH,I,A,N >F
	ZERO? F \?L43
	PUSH 0
	JUMP ?L32
?L31:	PUSH 0
?L32:	ZERO? STACK /?L30
?L30:	NEXT? I >I /?L114
?L25:	ZERO? F /?L42
	RETURN F
?L42:	FIRST? WINNER >I \?L46
?L115:	CALL REFERS?,A,N,I >STACK
	ZERO? STACK /?L49
	SET 'F,I
	JUMP ?L46
?L49:	FSET? I,SURFACEBIT /?L54
	FSET? I,OPENABLE \?L55
	FSET? I,OPENBIT /?L54
?L55:	FSET? I,CONTBIT \?L52
	FSET? I,OPENABLE \?L54
	FSET? I,CONTBIT \?L52
	FSET? I,TRANSBIT \?L52
?L54:	CALL CONTAINER-SEARCH,I,A,N >F
	ZERO? F \?L64
	PUSH 0
	JUMP ?L53
?L52:	PUSH 0
?L53:	ZERO? STACK /?L51
?L51:	NEXT? I >I /?L115
?L46:	ZERO? F /?L63
	RETURN F
?L63:	FIRST? GLOBAL-OBJECTS >I \?L67
?L116:	CALL REFERS?,A,N,I >STACK
	ZERO? STACK /?L70
	SET 'F,I
	JUMP ?L67
?L70:	NEXT? I >I /?L116
?L67:	ZERO? F /?L75
	RETURN F
?L75:	FIRST? LOCAL-GLOBALS >I \?L79
?L117:	CALL REFERS?,A,N,I >STACK
	ZERO? STACK /?L82
	CALL GLOBAL-IN?,I,HERE >STACK
	ZERO? STACK /?L82
	SET 'F,I
	JUMP ?L79
?L82:	NEXT? I >I /?L117
?L79:	ZERO? F /?L87
	RETURN F
?L87:	FIRST? ROOMS >I \?L91
?L118:	FIRST? I >J \?L96
?L119:	CALL REFERS?,A,N,J >STACK
	ZERO? STACK /?L101
	SET 'P,J
	FSET? P,PERSONBIT \?L101
	PRINTD P
	PRINTI " does not seem to be here."
	CRLF
	RFALSE
?L101:	NEXT? J >J /?L119
?L96:	NEXT? I >I /?L118
?L91:	PRINTI "You don't see that here."
	CRLF
	RFALSE

	.FUNCT CONTAINER-SEARCH,I,A,N,J,F,J?1
	FIRST? I >J?1 \?L3
?L19:	CALL REFERS?,A,N,J?1 >STACK
	ZERO? STACK /?L6
	SET 'F,J?1
	JUMP ?L3
?L6:	FSET? I,SURFACEBIT /?L9
	FSET? I,OPENABLE \?L10
	FSET? I,OPENBIT /?L9
?L10:	FSET? I,CONTBIT \?L12
	FSET? I,OPENABLE \?L9
	FSET? I,CONTBIT \?L12
	FSET? I,TRANSBIT \?L12
?L9:	CALL CONTAINER-SEARCH,J?1,A,N >F
	ZERO? F \?L18
?L12:	NEXT? J?1 >J?1 /?L19
?L3:	ZERO? F /FALSE
?L18:	RETURN F

	.FUNCT GLOBAL-IN?,O,R
	CALL IN-PBTBL?,R,P?GLOBAL,O >STACK
	RSTACK

	.FUNCT REFERS?,A,N,O
	ZERO? A /?L2
	CALL IN-PBTBL?,O,P?ADJECTIVE,A >STACK
	ZERO? STACK /FALSE
?L2:	CALL IN-PWTBL?,O,P?SYNONYM,N >STACK
	RSTACK

	.FUNCT IN-PWTBL?,O,P,V,PT,MAX,I
	GETPT O,P >PT
	ZERO? PT /FALSE
	PTSIZE PT >STACK
	DIV STACK,2 >STACK
	SUB STACK,1 >MAX
	SET 'I,0
?L3:	GET PT,I >STACK
	EQUAL? STACK,V /TRUE
	IGRTR? 'I,MAX \?L3
	RFALSE

	.FUNCT IN-PBTBL?,O,P,V,PT,MAX,I
	GETPT O,P >PT
	ZERO? PT /FALSE
	PTSIZE PT >STACK
	SUB STACK,1 >MAX
	SET 'I,0
?L3:	GETB PT,I >STACK
	EQUAL? STACK,V /TRUE
	IGRTR? 'I,MAX \?L3
	RFALSE

	.FUNCT DUMPLINE,P,WDS
	ADD LEXBUF,2 >P
	GETB LEXBUF,1 >WDS
	PRINTN WDS
	PRINTI " words:"
?L3:	DLESS? 'WDS,0 \?L5
	CRLF
	RTRUE
?L5:	PRINTC 32
	GET P,0 >STACK
	CALL DUMPWORD,STACK
	ADD P,4 >P
	JUMP ?L3

	.FUNCT DUMPLEX,C,P,WDS
	ADD LEXBUF,2 >P
	GETB LEXBUF,1 >WDS
	SET 'C,1
?L1:	PRINTN C
	PRINTI " of LEXBUF is "
	GET LEXBUF,C >STACK
	PRINTN STACK
	CRLF
	IGRTR? 'C,WDS \?L1
	RTRUE

	.FUNCT DUMPWORD,W,FL
	ZERO? W /?L1
	PRINTB W
	PRINTC 40
	GETB W,VOCAB-FL >FL
	BTST FL,PS?BUZZ-WORD \?L3
	PRINTC 66
?L3:	BTST FL,PS?PREPOSITION \?L6
	PRINTC 80
?L6:	BTST FL,PS?DIRECTION \?L9
	PRINTC 68
?L9:	BTST FL,PS?ADJECTIVE \?L12
	PRINTC 65
?L12:	BTST FL,PS?VERB \?L15
	PRINTC 86
?L15:	BTST FL,PS?OBJECT \?L18
	PRINTC 79
?L18:	PRINTC 41
	RTRUE
?L1:	PRINTI "---"
	RTRUE

	.FUNCT COPY-LEXBUF,C,W,WDS
	GETB LEXBUF,1 >WDS
	SET 'C,1
	PUTB BACKLEXBUF,1,WDS
?L1:	GET LEXBUF,C >W
	PUT BACKLEXBUF,C,W
	IGRTR? 'C,WDS \?L1
	RTRUE

	.FUNCT RESTORE-LEX,C,W,WDS
	GETB BACKLEXBUF,1 >WDS
	SET 'C,1
	PUTB LEXBUF,1,WDS
?L1:	GET BACKLEXBUF,C >W
	PUT LEXBUF,C,W
	IGRTR? 'C,WDS \?L1
	RTRUE

	.FUNCT COPY-READBUF,C,W
	SET 'C,1
?L1:	GETB READBUF,C >W
	PUTB BACKREADBUF,C,W
	IGRTR? 'C,100 \?L1
	RTRUE

	.FUNCT RESTORE-READBUF,C,W
	SET 'C,1
?L1:	GETB BACKREADBUF,C >W
	PUTB READBUF,C,W
	IGRTR? 'C,100 \?L1
	RTRUE

	.FUNCT DUMPBUF,C,WDS
	GETB READBUF,1 >WDS
	SET 'C,1
?L1:	PRINTN C
	PRINTI " of READBUF is "
	GET READBUF,C >STACK
	PRINTN STACK
	CRLF
	IGRTR? 'C,100 \?L1
	RTRUE

	.FUNCT READLINE
	ZERO? AGAINCALL \TRUE
	CRLF
	PRINTI "> "
	SUB READBUF-SIZE,2 >STACK
	PUTB READBUF,0,STACK
	READ READBUF,LEXBUF
	RTRUE

	.FUNCT PERFORM,ACT,DOBJ,IOBJ,PRTN,RTN,OA,OD,ODD,OI,WON
	GET PREACTIONS,ACT >PRTN
	GET ACTIONS,ACT >RTN
	SET 'OA,PRSA
	SET 'OD,PRSO
	SET 'ODD,PRSO-DIR
	SET 'OI,PRSI
	SET 'PRSA,ACT
	SET 'PRSO,DOBJ
	EQUAL? ACT,V?WALK /?L3
	SET 'PRSO-DIR,0
	JUMP ?L4
?L3:	SET 'PRSO-DIR,1
?L4:	SET 'PRSI,IOBJ
	CALL PERFORM-CALL-HANDLERS,PRTN,RTN >WON
	SET 'PRSA,OA
	SET 'PRSO,OD
	SET 'PRSO-DIR,ODD
	SET 'PRSI,OI
	RETURN WON

	.FUNCT PERFORM-CALL-HANDLERS,PRTN,RTN,AC,RM
	GETP WINNER,P?ACTION >AC
	ZERO? AC /?L1
	CALL AC >STACK
	ZERO? STACK \TRUE
?L1:	LOC WINNER >RM
	ZERO? RM /?L3
	GETP RM,P?ACTION >AC
	ZERO? AC /?L3
	CALL AC,M-BEG >STACK
	ZERO? STACK \TRUE
?L3:	ZERO? PRTN /?L4
	CALL PRTN >STACK
	ZERO? STACK \TRUE
?L4:	ZERO? PRSI /?L5
	GETP PRSI,P?ACTION >AC
	ZERO? AC /?L5
	CALL AC >STACK
	ZERO? STACK \TRUE
?L5:	ZERO? PRSO-DIR \?L6
	ZERO? PRSO /?L6
	GETP PRSO,P?ACTION >AC
	ZERO? AC /?L6
	CALL AC >STACK
	ZERO? STACK \TRUE
?L6:	CALL RTN >STACK
	RSTACK

	.FUNCT GOTO,RM
	SET 'HERE,RM
	MOVE WINNER,HERE
	FSET HERE,TOUCHBIT
	GETP RM,P?ACTION >STACK
	CALL STACK,M-ENTER >STACK
	CALL V-LOOK >STACK
	RSTACK

	.FUNCT PICK-ONE,TABL,LENGTH,CNT,RND,S,MSG
	GET TABL,0 >LENGTH
	GET TABL,1 >CNT
?L1:	ADD CNT,S >STACK
	GET TABL,STACK >STACK
	PUT TEMPTABLE,S,STACK
	INC 'S
	ADD S,CNT >STACK
	GRTR? STACK,LENGTH \?L1
	RANDOM S >STACK
	SUB STACK,1 >RND
	GET TEMPTABLE,RND >MSG
	GET TABL,CNT >STACK
	ADD CNT,RND >STACK
	PUT TABL,STACK,STACK
	PUT TABL,CNT,MSG
	IGRTR? 'CNT,LENGTH \?L6
	SET 'CNT,2
?L6:	PUT TABL,1,CNT
	RETURN MSG

	.FUNCT PICK-ONE-R,TABL,MSG,RND
	GET TABL,0 >STACK
	RANDOM STACK >RND
	GET TABL,RND >MSG
	RETURN MSG

	.FUNCT WAIT-TURNS,TURNS,T,INTERRUPT,ENDACT,BACKUP-WAIT
	SET 'BACKUP-WAIT,STANDARD-WAIT
	SET 'STANDARD-WAIT,TURNS
	SET 'T,1
?L1:	GETP HERE,P?ACTION >STACK
	CALL STACK,M-END >ENDACT
	CALL CLOCKER >INTERRUPT
	IGRTR? 'T,STANDARD-WAIT /?L5
	ZERO? ENDACT \?L5
	ZERO? INTERRUPT /?L1
?L5:	SET 'STANDARD-WAIT,BACKUP-WAIT
	SET 'AGAINCALL,1
	RTRUE

	.FUNCT JIGS-UP,TEXT,RESP,Y=0,X=0,R
	PRINT TEXT
	CRLF
	PRINTI "***** The game is over *****"
	CRLF
	CRLF
	ZERO? X /?L5
	PRINTI "Would you like to RESTART, UNDO, RESTORE, or QUIT? > "
	JUMP ?L7
?L5:	PRINTI "Would you like to RESTART, RESTORE or QUIT? > "
?L7:	SUB READBUF-SIZE,2 >STACK
	PUTB READBUF,0,STACK
	READ READBUF,LEXBUF
	GET LEXBUF,1 >STACK
	EQUAL? STACK,W?RESTART \?L10
	SET 'Y,1
	JUMP ?L9
?L10:	GET LEXBUF,1 >STACK
	EQUAL? STACK,W?RESTORE \?L12
	SET 'Y,2
	JUMP ?L9
?L12:	GET LEXBUF,1 >STACK
	EQUAL? STACK,W?QUIT \?L13
	SET 'Y,3
	JUMP ?L9
?L13:	GET LEXBUF,1 >STACK
	EQUAL? STACK,W?UNDO \?L14
	SET 'Y,4
	JUMP ?L9
?L14:	ZERO? X /?L16
	CRLF
	PRINTI "(Please type RESTART, UNDO, RESTORE or QUIT)  >"
	JUMP ?L7
?L16:	CRLF
	PRINTI "(Please type RESTART, RESTORE or QUIT) > "
	JUMP ?L7
?L9:	EQUAL? Y,1 \?L23
	RESTART
?L23:	EQUAL? Y,2 \?L25
	ZERO? X /?L26
	RESTORE /?L28
	SET 'R,0
	JUMP ?L29
?L28:	SET 'R,1
?L29:	ZERO? R \FALSE
	PRINTI "Restore failed - restarting instead."
	CRLF
	PRINTI "Press any key >"
	CALL GETONECHAR
	RESTART
?L26:	CALL JIGS-UP,STR?2 >STACK
	RSTACK
?L25:	EQUAL? Y,3 \?L36
	PRINTI "Thanks for playing."
	CRLF
	QUIT
?L36:	EQUAL? Y,4 \FALSE
	ZERO? X /?L40
	CALL V-UNDO >R
	ZERO? R \FALSE
	PRINTI "Undo failed - restarting instead."
	CRLF
	PRINTI "Press any key >"
	CALL GETONECHAR
	RESTART
?L40:	CALL JIGS-UP,STR?2 >STACK
	RSTACK

	.FUNCT ROB,VICTIM,DEST,N,I
	FIRST? VICTIM >I /?L4
	RTRUE
?L1:	ZERO? I /TRUE
?L4:	NEXT? I >N /?L7
?L7:	FSET? I,WORNBIT \?L8
	FSET? DEST,PERSONBIT /?L8
	FCLEAR I,WORNBIT
?L8:	ZERO? DEST \?L11
	REMOVE I
	JUMP ?L13
?L11:	MOVE I,DEST
?L13:	SET 'I,N
	JUMP ?L1

	.FUNCT YES?,RESP
	PRINTI " (y/n) >"
?L1:	CALL GETONECHAR >RESP
	CRLF
	EQUAL? RESP,89,121 /TRUE
	EQUAL? RESP,78,110 /FALSE
	PRINTI "(Please type y or n) >"
	JUMP ?L1

	.FUNCT GETONECHAR
	SUB READBUF-SIZE,2 >STACK
	PUTB READBUF,0,STACK
	READ READBUF,LEXBUF
	GETB READBUF,1 >STACK
	RSTACK

	.FUNCT VISIBLE?,OBJ,P,M,T=0
	LOC OBJ >P
	CALL META-LOC,OBJ >M
	EQUAL? M,HERE /?L1
	EQUAL? P,LOCAL-GLOBALS \?L6
	CALL GLOBAL-IN?,OBJ,HERE >STACK
	ZERO? STACK \TRUE
?L6:	EQUAL? P,GLOBAL-OBJECTS \FALSE
	RTRUE
?L1:	FSET? P,CONTBIT \?L11
	FSET? P,SURFACEBIT /?L11
	FSET? P,TRANSBIT /?L11
	FSET? P,OPENBIT /?L11
	SET 'T,0
	JUMP ?L10
?L11:	EQUAL? P,HERE /?L14
	EQUAL? P,WINNER \?L13
?L14:	SET 'T,1
	JUMP ?L10
?L13:	LOC P >P
	JUMP ?L1
?L10:	EQUAL? T,1 \FALSE
	RTRUE

	.FUNCT ACCESSIBLE?,OBJ,L,M,T=0
	LOC OBJ >L
	CALL META-LOC,OBJ >M
	EQUAL? M,HERE \FALSE
?L1:	FSET? L,CONTBIT \?L6
	FSET? L,OPENBIT /?L6
	FSET? L,SURFACEBIT /?L6
	SET 'T,0
	JUMP ?L5
?L6:	EQUAL? L,HERE /?L9
	EQUAL? L,WINNER \?L8
?L9:	SET 'T,1
	JUMP ?L5
?L8:	LOC L >L
	JUMP ?L1
?L5:	EQUAL? T,1 \FALSE
	RTRUE

	.FUNCT HELD?,OBJ,HLDR=0,TH,T=0
	ZERO? HLDR \?L1
	SET 'HLDR,WINNER
?L1:	LOC OBJ >STACK
	EQUAL? STACK,HLDR \?L5
	SET 'T,1
	JUMP ?L4
?L5:	ZERO? OBJ \?L7
	SET 'T,0
	JUMP ?L4
?L7:	LOC OBJ >OBJ
	JUMP ?L1
?L4:	EQUAL? T,1 \FALSE
	RTRUE

	.FUNCT META-LOC,OBJ,P,T=0
	LOC OBJ >P
	IN? P,ROOMS \?L1
	RETURN P
?L1:	FSET? P,PERSONBIT /?L8
	FSET? P,CONTBIT /?L8
	EQUAL? P,LOCAL-GLOBALS,GLOBAL-OBJECTS /?L8
	EQUAL? P,GENERIC-OBJECTS \?L6
?L8:	LOC P >P
?L6:	IN? P,ROOMS \?L10
	SET 'T,1
	JUMP ?L5
?L10:	ZERO? P \?L1
	SET 'T,0
?L5:	EQUAL? 1,1 \FALSE
	RETURN P

	.FUNCT NOW-DARK
	FSET? HERE,LIGHTBIT /FALSE
	CALL SEARCH-FOR-LIGHT >STACK
	ZERO? STACK \FALSE
	PRINTR "You are plunged into darkness."

	.FUNCT NOW-LIT
	FSET? HERE,LIGHTBIT /FALSE
	CALL SEARCH-FOR-LIGHT >STACK
	ZERO? STACK \FALSE
	PRINTI "You can see your surroundings now."
	CRLF
	CRLF
	SET 'NLITSET,1
	CALL V-LOOK >STACK
	RSTACK

	.FUNCT QUEUE,IRTN,TURNZ
	ADD IQ-LENGTH,2 >IQ-LENGTH
	SUB IQ-LENGTH,1 >STACK
	PUT IQUEUE,STACK,IRTN
	PUT IQUEUE,IQ-LENGTH,TURNZ
	RTRUE

	.FUNCT DEQUEUE,IRTN,S
?L0:	ADD S,2 >S
	GRTR? S,IQ-LENGTH /TRUE
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	EQUAL? STACK,IRTN \?L0
	CALL DEL-EVENT,S
	CALL IQUEUE-CLEANUP
	RTRUE

	.FUNCT DEL-EVENT,IQPOS
	PUT IQUEUE,IQPOS,-9
	RTRUE

	.FUNCT IQUEUE-CLEANUP,S,Z
?L0:	ADD S,2 >S
	GRTR? S,IQ-LENGTH /TRUE
	GET IQUEUE,S >STACK
	EQUAL? STACK,-9 \?L0
	SET 'Z,S
?L6:	ADD Z,1 >STACK
	GET IQUEUE,STACK >STACK
	SUB Z,1 >STACK
	PUT IQUEUE,STACK,STACK
	ADD Z,2 >STACK
	GET IQUEUE,STACK >STACK
	PUT IQUEUE,Z,STACK
	EQUAL? Z,IQ-LENGTH \?L8
	SUB Z,1 >STACK
	PUT IQUEUE,STACK,0
	PUT IQUEUE,Z,0
	SUB IQ-LENGTH,2 >IQ-LENGTH
	SUB S,2 >S
	JUMP ?L0
?L8:	ADD Z,2 >Z
	JUMP ?L6

	.FUNCT RUNNING?,E,S
?L0:	ADD S,2 >S
	GRTR? S,IQ-LENGTH /FALSE
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	EQUAL? STACK,E \?L0
	GET IQUEUE,S >STACK
	EQUAL? STACK,1 /TRUE
	GET IQUEUE,S >STACK
	EQUAL? STACK,-1 \?L0
	RTRUE

	.FUNCT CLOCKER,S,C,FIRED
	INC 'TURNS
?L1:	ADD S,2 >S
	GRTR? S,IQ-LENGTH \?L3
	EQUAL? C,1 \?L2
	CALL IQUEUE-CLEANUP
	JUMP ?L2
?L3:	GET IQUEUE,S >STACK
	EQUAL? STACK,-1 \?L9
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	CALL STACK >FIRED
?L9:	GET IQUEUE,S >STACK
	GRTR? STACK,0 \?L1
	GET IQUEUE,S >STACK
	DEC 'STACK
	PUT IQUEUE,S,STACK
	GET IQUEUE,S >STACK
	ZERO? STACK \?L1
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	CALL STACK >FIRED
	CALL DEL-EVENT,S
	SET 'C,1
	JUMP ?L1
?L2:	ZERO? FIRED /FALSE
	RTRUE

	.FUNCT V-LOOK,P,F,N,S,I
	FSET? HERE,LIGHTBIT /?L3
	CALL SEARCH-FOR-LIGHT >STACK
	ZERO? STACK \?L3
	EQUAL? NLITSET,1 \?L1
?L3:	PRINTD HERE
	CRLF
	GETP HERE,P?LDESC >P
	ZERO? P /?L6
	PRINT P
	CRLF
	JUMP ?L10
?L6:	GETP HERE,P?ACTION >STACK
	CALL STACK,M-LOOK >STACK
?L10:	FIRST? HERE >I \?L25
?L120:	FSET? I,TOUCHBIT /?L16
	GETP I,P?FDESC >P
	ZERO? P /?L16
	PRINT P
	CRLF
?L16:	NEXT? I >I /?L120
	FIRST? HERE >I \?L25
?L121:	FSET? I,NDESCBIT /?L33
	EQUAL? I,WINNER /?L33
	FSET? I,PERSONBIT /?L33
	FSET? I,TOUCHBIT /?L30
	GETP I,P?FDESC >P
	ZERO? P \?L33
?L30:	INC 'N
	EQUAL? N,1 \?L31
	SET 'F,I
	JUMP ?L33
?L31:	EQUAL? N,2 \?L33
	SET 'S,I
?L33:	NEXT? I >I /?L121
?L25:	GRTR? N,0 \?L38
	FSET? F,PLURALBIT \?L40
	PRINTI "There are"
	JUMP ?L42
?L40:	PRINTI "There is"
?L42:	EQUAL? N,1 \?L43
	CALL ARTICLE,F
	PRINTD F
	JUMP ?L51
?L43:	EQUAL? N,2 \?L45
	CALL ARTICLE,F
	PRINTD F
	PRINTI " and"
	CALL ARTICLE,S
	PRINTD S
	JUMP ?L51
?L45:	FIRST? HERE >I \?L51
?L122:	FSET? I,NDESCBIT /?L60
	EQUAL? I,WINNER /?L60
	FSET? I,PERSONBIT /?L60
	FSET? I,TOUCHBIT /?L56
	GETP I,P?FDESC >P
	ZERO? P \?L60
?L56:	CALL ARTICLE,I
	PRINTD I
	DEC 'N
	ZERO? N /?L60
	EQUAL? N,1 \?L59
	PRINTI ", and"
	JUMP ?L60
?L59:	PRINTC 44
?L60:	NEXT? I >I /?L122
?L51:	PRINTI " here."
	CRLF
?L38:	FIRST? HERE >I \?L69
?L123:	FSET? I,CONTBIT \?L72
	FIRST? I >STACK \?L72
	FSET? I,SURFACEBIT /?L74
	FSET? I,OPENBIT \?L72
?L74:	CALL DESCRIBE-CONTENTS,I
?L72:	NEXT? I >I /?L123
?L69:	SET 'N,0
	FIRST? HERE >I \?L80
?L124:	FSET? I,PERSONBIT \?L87
	EQUAL? I,WINNER /?L87
	INC 'N
	EQUAL? N,1 \?L85
	SET 'F,I
	JUMP ?L87
?L85:	EQUAL? N,2 \?L87
	SET 'S,I
?L87:	NEXT? I >I /?L124
?L80:	GRTR? N,0 \?L92
	EQUAL? N,1 \?L94
	PRINTD F
	PRINTI " is"
	JUMP ?L99
?L94:	EQUAL? N,2 \?L96
	PRINTD F
	PRINTI " and "
	PRINTD S
	PRINTI " are"
	JUMP ?L99
?L96:	FIRST? HERE >I \?L102
?L125:	FSET? I,PERSONBIT \?L110
	EQUAL? I,WINNER /?L110
	PRINTD I
	DEC 'N
	ZERO? N /?L110
	EQUAL? N,1 \?L109
	PRINTI ", and "
	JUMP ?L110
?L109:	PRINTC 44
?L110:	NEXT? I >I /?L125
?L102:	PRINTI " are"
?L99:	PRINTI " here."
	CRLF
?L92:	SET 'NLITSET,0
	RETURN NLITSET
?L1:	PRINTI "Darkness"
	CRLF
	PRINTR "It is pitch black. You are likely to be eaten by a grue."

	.FUNCT ARTICLE,OBJ
	FSET? OBJ,NARTICLEBIT \?L1
	PRINTC 32
	RTRUE
?L1:	FSET? OBJ,VOWELBIT \?L3
	PRINTI " an "
	RTRUE
?L3:	PRINTI " a "
	RTRUE

	.FUNCT DESCRIBE-CONTENTS,OBJ
	FSET? OBJ,SURFACEBIT \?L1
	PRINTI "On"
	JUMP ?L3
?L1:	PRINTI "In"
?L3:	PRINTI " the "
	PRINTD OBJ
	PRINTC 32
	CALL ISARE-LIST,OBJ
	PRINTC 46
	CRLF
	RTRUE

	.FUNCT INV-DESCRIBE-CONTENTS,OBJ,N,F,I
	FSET? OBJ,SURFACEBIT \?L1
	PRINTI " (holding"
	JUMP ?L3
?L1:	PRINTI " (containing"
?L3:	FIRST? OBJ >F /?L5
	PRINTI " nothing)"
	RTRUE
?L5:	FIRST? OBJ >I \?L10
?L35:	INC 'N
	NEXT? I >I /?L35
?L10:	EQUAL? N,1 \?L15
	CALL ARTICLE,F
	PRINTD F
	JUMP ?L25
?L15:	EQUAL? N,2 \?L17
	CALL ARTICLE,F
	PRINTD F
	PRINTI " and"
	NEXT? F >STACK /?L20
?L20:	CALL ARTICLE,STACK
	NEXT? F >STACK /?L21
?L21:	PRINTD STACK
	JUMP ?L25
?L17:	FIRST? OBJ >I \?L25
?L36:	CALL ARTICLE,I
	PRINTD I
	DEC 'N
	ZERO? N /?L31
	EQUAL? N,1 \?L30
	PRINTI ", and"
	JUMP ?L31
?L30:	PRINTC 44
?L31:	NEXT? I >I /?L36
?L25:	PRINTC 41
	RTRUE

	.FUNCT ISARE-LIST,O,N,F,I
	FIRST? O >F /?L2
	PRINTI "is nothing"
	RTRUE
?L2:	FIRST? O >I \?L7
?L35:	INC 'N
	NEXT? I >I /?L35
?L7:	EQUAL? N,1 \?L12
	FSET? F,PLURALBIT \?L14
	PRINTI "are"
	JUMP ?L16
?L14:	PRINTI "is"
?L16:	CALL ARTICLE,F
	PRINTD F
	RTRUE
?L12:	EQUAL? N,2 \?L17
	PRINTI "are"
	CALL ARTICLE,F
	PRINTD F
	PRINTI " and"
	NEXT? F >STACK /?L20
?L20:	CALL ARTICLE,STACK
	NEXT? F >STACK /?L21
?L21:	PRINTD STACK
	RTRUE
?L17:	PRINTI "are"
	FIRST? O >I \TRUE
?L36:	CALL ARTICLE,I
	PRINTD I
	DEC 'N
	ZERO? N /?L31
	EQUAL? N,1 \?L30
	PRINTI ", and"
	JUMP ?L31
?L30:	PRINTC 44
?L31:	NEXT? I >I /?L36
	RTRUE

	.FUNCT V-WALK,PT,PTS,RM
	ZERO? PRSO-DIR \?L1
	PRINTR "You must give a direction to walk in."
?L1:	GETPT HERE,PRSO >PT
	ZERO? PT \?L3
	PRINTR "You can't go that way."
?L3:	PTSIZE PT >PTS
	EQUAL? PTS,UEXIT \?L4
	GETB PT,EXIT-RM >RM
	JUMP ?L15
?L4:	EQUAL? PTS,NEXIT \?L5
	GET PT,NEXIT-MSG >STACK
	PRINT STACK
	CRLF
	RTRUE
?L5:	EQUAL? PTS,FEXIT \?L6
	GET PT,FEXIT-RTN >STACK
	CALL STACK >RM
	ZERO? RM /TRUE
	JUMP ?L15
?L6:	EQUAL? PTS,CEXIT \?L9
	GETB PT,CEXIT-VAR >STACK
	VALUE STACK >STACK
	ZERO? STACK /?L10
	GETB PT,EXIT-RM >RM
	JUMP ?L15
?L10:	GET PT,CEXIT-MSG >RM
	ZERO? RM /?L12
	PRINT RM
	CRLF
	RTRUE
?L12:	PRINTR "You can't go that way."
?L9:	EQUAL? PTS,DEXIT \?L14
	PRINTR "Not implemented."
?L14:	PRINTI "Broken exit ("
	PRINTN PTS
	PRINTR ")."
?L15:	CALL GOTO,RM >STACK
	RSTACK

	.FUNCT V-QUIT
	PRINTI "Are you sure you want to quit?"
	CRLF
	CALL YES? >STACK
	ZERO? STACK /?L3
	PRINTI "Thanks for playing."
	CRLF
	QUIT
?L3:	PRINTR "OK - not quitting."

	.FUNCT V-EXAMINE,P,N
	SET 'N,0
	GETP PRSO,P?LDESC >P
	ZERO? P /?L1
	PRINT P
	CRLF
	SET 'N,1
?L1:	GETP PRSO,P?TEXT >P
	ZERO? P /?L6
	PRINT P
	CRLF
	SET 'N,1
?L6:	FSET? PRSO,OPENABLE \?L18
	FSET? PRSO,OPENBIT /?L11
	PRINTI "The "
	PRINTD PRSO
	PRINTI " is closed."
	CRLF
	FSET? PRSO,TRANSBIT \?L15
	FIRST? PRSO >STACK \?L15
	CALL DESCRIBE-CONTENTS,PRSO
?L15:	SET 'N,1
	JUMP ?L21
?L11:	FSET? PRSO,OPENABLE \?L18
	FSET? PRSO,OPENBIT \?L18
	PRINTI "The "
	PRINTD PRSO
	PRINTI " is open. "
	CALL DESCRIBE-CONTENTS,PRSO
	SET 'N,1
	JUMP ?L21
?L18:	FSET? PRSO,CONTBIT \?L21
	FIRST? PRSO >STACK \?L21
	FSET? PRSO,TRANSBIT /?L22
	FSET? PRSO,SURFACEBIT /?L22
	FSET? PRSO,OPENBIT \?L23
	FSET? PRSO,OPENABLE /?L22
?L23:	FSET? PRSO,CONTBIT \?L21
	FSET? PRSO,OPENABLE /?L21
?L22:	CALL DESCRIBE-CONTENTS,PRSO
	SET 'N,1
?L21:	ZERO? N \FALSE
	PRINTI "You see nothing special about the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	RTRUE

	.FUNCT V-INVENTORY,I
	FSET? HERE,LIGHTBIT /?L3
	CALL SEARCH-FOR-LIGHT >STACK
	ZERO? STACK /?L1
?L3:	FIRST? WINNER >STACK \?L4
	PRINTI "You are carrying:"
	CRLF
	FIRST? WINNER >I \TRUE
?L13:	PRINTI "   "
	PRINTD I
	FSET? I,WORNBIT \?L15
	PRINTI " (worn)"
?L15:	FSET? I,LIGHTBIT \?L17
	PRINTI " (providing light)"
?L17:	FSET? I,CONTBIT \?L24
	FSET? I,OPENABLE \?L23
	FSET? I,OPENBIT \?L21
	PRINTI " (open) "
	CALL INV-DESCRIBE-CONTENTS,I
	JUMP ?L24
?L21:	FSET? I,OPENABLE \?L23
	FSET? I,OPENBIT /?L23
	PRINTI " (closed)"
	JUMP ?L24
?L23:	FSET? I,SURFACEBIT /?L25
	FSET? I,OPENBIT /?L25
	FSET? I,CONTBIT \?L24
	FSET? I,OPENABLE /?L24
?L25:	CALL INV-DESCRIBE-CONTENTS,I
?L24:	CRLF
	NEXT? I >I /?L13
	RTRUE
?L4:	PRINTR "You are empty-handed."
?L1:	PRINTR "It is too dark to see what you're carrying."

	.FUNCT V-TAKE,HOLDER,S,X
	FSET? PRSO,PERSONBIT \?L1
	PRINTI "I don't think "
	PRINTD PRSO
	PRINTR " would appreciate that."
?L1:	FSET? PRSO,TAKEBIT /?L5
	PRINTR "That's not something you can pick up."
?L5:	IN? PRSO,WINNER \?L6
	PRINTR "You already have that."
?L6:	FSET? PRSO,WEARBIT \?L8
	PRINTI "You wear the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	FSET PRSO,WORNBIT
	MOVE PRSO,WINNER
	FSET PRSO,TOUCHBIT
	RTRUE
?L8:	CALL TAKE-CONT-SEARCH,HERE >HOLDER
	ZERO? HOLDER /?L13
	FSET? HOLDER,SURFACEBIT \?L15
	PRINTI "You pick up the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	FSET PRSO,TOUCHBIT
	MOVE PRSO,WINNER
	RTRUE
?L15:	FSET? HOLDER,OPENBIT \?L19
	PRINTI "You reach in the "
	PRINTD HOLDER
	PRINTI " and take the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	FSET PRSO,TOUCHBIT
	MOVE PRSO,WINNER
	RTRUE
?L19:	PRINTI "The enclosing "
	PRINTD HOLDER
	PRINTI " prevents you from taking the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	RTRUE
?L13:	PRINTI "You pick up the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	FSET PRSO,TOUCHBIT
	MOVE PRSO,WINNER
	RTRUE

	.FUNCT TAKE-CONT-SEARCH,A,H,I
	FIRST? A >I \?L3
?L19:	FSET? I,CONTBIT /?L8
	EQUAL? I,WINNER \?L12
?L8:	IN? PRSO,I \?L9
	SET 'H,I
	JUMP ?L3
?L9:	CALL TAKE-CONT-SEARCH,I >H
	ZERO? H \?L18
?L12:	NEXT? I >I /?L19
?L3:	ZERO? H /FALSE
?L18:	RETURN H

	.FUNCT V-DROP
	IN? PRSO,WINNER /?L1
	PRINTR "You don't have that."
?L1:	MOVE PRSO,HERE
	FSET PRSO,TOUCHBIT
	FCLEAR PRSO,WORNBIT
	PRINTI "You drop the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	RTRUE

	.FUNCT INDIRECTLY-IN?,OBJ,CONT
?L0:	ZERO? OBJ /FALSE
	LOC OBJ >OBJ
	EQUAL? OBJ,CONT \?L0
	RTRUE

	.FUNCT V-PUT-ON,S,CCAP,CSIZE,X,W,B
	FSET? PRSI,PERSONBIT \?L1
	PRINTI "I don't think "
	PRINTD PRSI
	PRINTR " would appreciate that."
?L1:	FSET? PRSI,CONTBIT \?L6
	FSET? PRSI,SURFACEBIT /?L5
?L6:	PRINTI "The "
	PRINTD PRSI
	FSET? PRSI,PLURALBIT \?L9
	PRINTI " aren't"
	JUMP ?L11
?L9:	PRINTI " isn't"
?L11:	PRINTR " something you can put things on."
?L5:	IN? PRSO,WINNER /?L14
	PRINTR "You don't have that."
?L14:	EQUAL? PRSO,PRSI /?L16
	CALL INDIRECTLY-IN?,PRSI,PRSO >STACK
	ZERO? STACK /?L15
?L16:	PRINTR "You can't put something on itself."
?L15:	GETPT PRSO,P?SIZE >X
	ZERO? X /?L18
	GETP PRSO,P?SIZE >S
	JUMP ?L20
?L18:	SET 'S,5
?L20:	GETPT PRSI,P?CAPACITY >X
	ZERO? X /?L21
	GETP PRSI,P?CAPACITY >CCAP
	JUMP ?L23
?L21:	SET 'CCAP,5
	SET 'B,1
?L23:	GETPT PRSI,P?SIZE >X
	ZERO? X /?L24
	GETP PRSI,P?SIZE >CSIZE
	JUMP ?L26
?L24:	SET 'CSIZE,5
?L26:	GRTR? S,CCAP /?L29
	GRTR? S,CSIZE \?L27
?L29:	PRINTI "That won't fit on the "
	PRINTD PRSI
	PRINTC 46
	CRLF
	RTRUE
?L27:	ZERO? B \?L35
	CALL CONTENTS-WEIGHT,PRSI >W
	ADD W,S >X
	GRTR? X,CCAP \?L35
	PRINTI "There's not enough room on the "
	PRINTD PRSI
	PRINTC 46
	CRLF
	RTRUE
?L35:	MOVE PRSO,PRSI
	FSET PRSO,TOUCHBIT
	FCLEAR PRSO,WORNBIT
	PRINTI "You put the "
	PRINTD PRSO
	PRINTI " on the "
	PRINTD PRSI
	PRINTC 46
	CRLF
	RTRUE

	.FUNCT V-PUT-IN,S,CCAP,CSIZE,X,W,B
	FSET? PRSI,PERSONBIT \?L1
	PRINTI "I don't think "
	PRINTD PRSI
	PRINTR " would appreciate that."
?L1:	FSET? PRSI,CONTBIT \?L6
	FSET? PRSI,SURFACEBIT \?L5
?L6:	PRINTI "The "
	PRINTD PRSI
	FSET? PRSI,PLURALBIT \?L9
	PRINTI " aren't"
	JUMP ?L11
?L9:	PRINTI " isn't"
?L11:	PRINTR " something you can put things in."
?L5:	FSET? PRSI,OPENBIT /?L17
	FSET? PRSI,OPENABLE \?L14
	PRINTI "The "
	PRINTD PRSI
	PRINTR " is closed."
?L14:	FSET? PRSI,OPENBIT /?L17
	FSET? PRSI,CONTBIT \?L17
	PRINTI "You see no way to put things into the "
	PRINTD PRSI
	PRINTC 46
	CRLF
	RTRUE
?L17:	IN? PRSO,WINNER /?L20
	PRINTR "You aren't holding that."
?L20:	EQUAL? PRSO,PRSI /?L22
	CALL INDIRECTLY-IN?,PRSI,PRSO >STACK
	ZERO? STACK /?L21
?L22:	PRINTR "You can't put something in itself."
?L21:	GETPT PRSO,P?SIZE >X
	ZERO? X /?L24
	GETP PRSO,P?SIZE >S
	JUMP ?L26
?L24:	SET 'S,5
?L26:	GETPT PRSI,P?CAPACITY >X
	ZERO? X /?L27
	GETP PRSI,P?CAPACITY >CCAP
	ZERO? DBCONT /?L34
	PRINTD PRSI
	PRINTI " has a capacity prop of "
	PRINTN CCAP
	CRLF
	JUMP ?L34
?L27:	ZERO? DBCONT /?L35
	PRINTD PRSI
	PRINTI " has no capacity prop.  Will take endless amount of objects as long as each object is size 5 or under"
	CRLF
?L35:	SET 'CCAP,5
	SET 'B,1
?L34:	GETPT PRSI,P?SIZE >X
	ZERO? X /?L40
	GETP PRSI,P?SIZE >CSIZE
	JUMP ?L42
?L40:	SET 'CSIZE,5
?L42:	ZERO? DBCONT /?L43
	PRINTD PRSO
	PRINTI "size is "
	PRINTN S
	PRINTI ", "
	PRINTD PRSI
	PRINTI " size is "
	PRINTN CSIZE
	CRLF
?L43:	GRTR? S,CCAP /?L50
	GRTR? S,CSIZE \?L48
?L50:	PRINTI "That won't fit in the "
	PRINTD PRSI
	PRINTC 46
	CRLF
	RTRUE
?L48:	ZERO? B \?L66
	CALL CONTENTS-WEIGHT,PRSI >W
	ADD W,S >X
	GRTR? X,CCAP \?L56
	PRINTI "There's not enough room in the "
	PRINTD PRSI
	PRINTC 46
	CRLF
	ZERO? DBCONT /TRUE
	PRINTD PRSO
	PRINTI " can't fit, since current bulk of "
	PRINTD PRSI
	PRINTI "'s contents is "
	PRINTN W
	PRINTI " and "
	PRINTD PRSI
	PRINTI "'s capacity is "
	PRINTN CCAP
	CRLF
	RTRUE
?L56:	ZERO? DBCONT /?L66
	PRINTD PRSO
	PRINTI " can fit, since current bulk of "
	PRINTD PRSI
	PRINTI "'s contents is "
	PRINTN W
	PRINTI " and "
	PRINTD PRSI
	PRINTI "'s capacity is "
	PRINTN CCAP
	CRLF
?L66:	MOVE PRSO,PRSI
	FSET PRSO,TOUCHBIT
	FCLEAR PRSO,WORNBIT
	PRINTI "You put the "
	PRINTD PRSO
	PRINTI " in the "
	PRINTD PRSI
	PRINTC 46
	CRLF
	RTRUE

	.FUNCT CONTENTS-WEIGHT,O,X,W,I
	FIRST? O >I \?L3
?L13:	GETPT I,P?SIZE >X
	ZERO? X /?L6
	GETP I,P?SIZE >X
	ADD W,X >W
	JUMP ?L8
?L6:	ADD W,5 >W
?L8:	NEXT? I >I /?L13
?L3:	ZERO? W /FALSE
	RETURN W

	.FUNCT WEIGHT,O,X,W,I
	GETPT O,P?SIZE >X
	ZERO? X /?L1
	GETP O,P?SIZE >W
	JUMP ?L3
?L1:	ADD W,5 >W
?L3:	FIRST? O >I \?L6
?L9:	PRINTI "Looping to set weight.  I is currently "
	PRINTD I
	CRLF
	GETPT I,P?SIZE >X
	ZERO? X /?L11
	GETP I,P?SIZE >X
	ADD W,X >W
	JUMP ?L13
?L11:	ADD W,5 >W
?L13:	FSET? I,CONTBIT /?L16
	EQUAL? I,WINNER \?L14
?L16:	CALL WEIGHT,I >X
	ADD W,X >W
?L14:	NEXT? I >I /?L9
?L6:	ZERO? W /FALSE
	RETURN W

	.FUNCT V-WEAR
	FSET? PRSO,WEARBIT \?L1
	CALL PERFORM,V?TAKE,PRSO >STACK
	RSTACK
?L1:	PRINTR "You can't wear that."

	.FUNCT V-UNWEAR
	FSET? PRSO,WORNBIT \?L1
	IN? PRSO,WINNER \?L1
	CALL PERFORM,V?DROP,PRSO >STACK
	RSTACK
?L1:	PRINTR "You aren't wearing that."

	.FUNCT V-EAT
	FSET? PRSO,EDIBLEBIT \?L1
	IN? PRSO,WINNER \?L3
	PRINTI "You devour the "
	PRINTD PRSO
	CRLF
	REMOVE PRSO
	RTRUE
?L3:	PRINTR "You're not holding that."
?L1:	PRINTR "That's hardly edible."

	.FUNCT V-VERSION,CNT=17
	PRINT GAME-BANNER
	PRINTI "
Release "
	GET 0,1 >STACK
	BAND STACK,2047 >STACK
	PRINTN STACK
	PRINTI " / Serial number "
?L3:	IGRTR? 'CNT,23 /?L4
	GETB 0,CNT >STACK
	PRINTC STACK
	JUMP ?L3
?L4:	PRINTI " / "
	PRINTI "ZILF 0.5"
	PRINTI " lib "
	PRINT ZILLIB-VERSION
	CRLF
	RTRUE

	.FUNCT V-THINK-ABOUT
	PRINTI "You contemplate"
	FSET? PRSO,NARTICLEBIT /?L3
	FSET? PRSO,PERSONBIT \?L1
?L3:	PRINTC 32
	JUMP ?L4
?L1:	PRINTI " the "
?L4:	PRINTD PRSO
	PRINTR " for a bit, but nothing fruitful comes to mind."

	.FUNCT V-OPEN
	FSET? PRSO,PERSONBIT \?L1
	PRINTI "I don't think "
	PRINTD PRSO
	PRINTR " would appreciate that."
?L1:	FSET? PRSO,OPENABLE /?L5
	PRINTR "That's not something you can open."
?L5:	FSET? PRSO,OPENBIT \?L6
	PRINTR "It's already open."
?L6:	FSET PRSO,TOUCHBIT
	FSET PRSO,OPENBIT
	PRINTI "You open the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	CALL DESCRIBE-CONTENTS,PRSO >STACK
	RSTACK

	.FUNCT V-CLOSE
	FSET? PRSO,PERSONBIT \?L1
	PRINTI "I don't think "
	PRINTD PRSO
	PRINTR " would appreciate that."
?L1:	FSET? PRSO,OPENABLE /?L5
	PRINTR "That's not something you can close."
?L5:	FSET? PRSO,OPENBIT /?L6
	PRINTR "It's already closed."
?L6:	FSET PRSO,TOUCHBIT
	FCLEAR PRSO,OPENBIT
	PRINTI "You close the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	RTRUE

	.FUNCT V-WAIT,T,INTERRUPT,ENDACT
	SET 'T,1
	PRINTI "Time passes."
	CRLF
?L3:	GETP HERE,P?ACTION >STACK
	CALL STACK,M-END >ENDACT
	CALL CLOCKER >INTERRUPT
	IGRTR? 'T,STANDARD-WAIT /TRUE
	ZERO? ENDACT \TRUE
	ZERO? INTERRUPT /?L3
	RTRUE

	.FUNCT V-AGAIN
	SET 'AGAINCALL,1
	CALL RESTORE-READBUF
	CALL RESTORE-LEX
	GET READBUF,1 >STACK
	ZERO? STACK /?L1
	CALL PARSER >STACK
	ZERO? STACK /?L8
	CALL PERFORM,PRSA,PRSO,PRSI
	EQUAL? PRSA,V?QUIT,V?VERSION,V?WAIT /?L8
	EQUAL? PRSA,V?SAVE,V?RESTORE,V?INVENTORY /?L5
	EQUAL? PRSA,V?UNDO /?L5
	GETP HERE,P?ACTION >STACK
	CALL STACK,M-END >STACK
?L5:	EQUAL? PRSA,V?QUIT,V?VERSION,V?WAIT /?L8
	EQUAL? PRSA,V?SAVE,V?RESTORE,V?INVENTORY /?L8
	EQUAL? PRSA,V?UNDO /?L8
	CALL CLOCKER
?L8:	LOC WINNER >HERE
	RETURN HERE
?L1:	PRINTR "Nothing to repeat."

	.FUNCT V-READ,T
	FSET? PRSO,READBIT /?L1
	PRINTR "That's not something you can read."
?L1:	GETP PRSO,P?TEXT >T
	ZERO? T /?L5
	PRINT T
	CRLF
	RTRUE
?L5:	GETP PRSO,P?TEXT-HELD >T
	ZERO? T /?L8
	IN? PRSO,WINNER \?L9
	PRINT T
	CRLF
	RTRUE
?L9:	PRINTR "You must be holding that to be able to read it."
?L8:	CALL PERFORM,V?EXAMINE,PRSO >STACK
	RSTACK

	.FUNCT V-TURN-ON
	FSET? PRSO,DEVICEBIT /?L1
	PRINTR "That's not something you can switch on and off."
?L1:	FSET? PRSO,ONBIT \?L5
	PRINTR "It's already on."
?L5:	FSET PRSO,ONBIT
	PRINTI "You switch on the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	RTRUE

	.FUNCT V-TURN-OFF
	FSET? PRSO,DEVICEBIT /?L1
	PRINTR "That's not something you can switch on and off."
?L1:	FSET? PRSO,ONBIT /?L5
	PRINTR "It's already off."
?L5:	FCLEAR PRSO,ONBIT
	PRINTI "You switch off the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	RTRUE

	.FUNCT V-FLIP
	FSET? PRSO,DEVICEBIT /?L1
	PRINTR "That's not something you can switch on and off."
?L1:	FSET? PRSO,ONBIT \?L12
	FCLEAR PRSO,ONBIT
	PRINTI "You switch off the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	RTRUE
?L12:	FSET PRSO,ONBIT
	PRINTI "You switch on the "
	PRINTD PRSO
	PRINTC 46
	CRLF
	RTRUE

	.FUNCT V-PUSH
	FSET? PRSO,PERSONBIT \?L1
	PRINTI "I don't think "
	PRINTD PRSO
	PRINTR " would appreciate that."
?L1:	PRINTI "Pushing the "
	PRINTD PRSO
	PRINTR " doesn't seem to accomplish much."

	.FUNCT V-UNDO,R
	PRINTR "Undo is not available in this version."

	.FUNCT V-SAVE,S
	PRINTI "Saving..."
	CRLF
	SAVE \?L3
	CALL V-LOOK >STACK
	RSTACK
?L3:	PRINTR "Save failed."

	.FUNCT V-RESTORE,R
	RESTORE /FALSE
	PRINTR "Restore failed."

	.FUNCT V-RESTART
	PRINTI "Are you sure you want to restart?"
	CRLF
	CALL YES? >STACK
	ZERO? STACK /?L3
	RESTART
?L3:	PRINTR "Restart aborted."

	.FUNCT V-DROB
	PRINTI "REMOVING CONTENTS OF "
	PRINTD PRSO
	PRINTI " FROM THE GAME."
	CRLF
	CALL ROB,PRSO >STACK
	RSTACK

	.FUNCT V-DSEND
	PRINTI "SENDING CONTENTS OF "
	PRINTD PRSO
	PRINTI " TO "
	PRINTD PRSI
	PRINTC 46
	CRLF
	CALL ROB,PRSO,PRSI >STACK
	RSTACK

	.FUNCT V-DOBJL,I
	FIRST? PRSO >I \TRUE
?L6:	PRINTI "The objects in "
	PRINTD PRSO
	PRINTI " include "
	PRINTD I
	CRLF
	NEXT? I >I /?L6
	RTRUE

	.FUNCT V-DCONT
	ZERO? DBCONT /?L1
	SET 'DBCONT,0
	PRINTR "Reporting of PUT-IN process with containers turned off."
?L1:	SET 'DBCONT,1
	PRINTR "Reporting of PUT-IN process with containers turned on."

	.FUNCT V-DTURN
	ZERO? DTURNS /?L1
	SET 'DTURNS,0
	PRINTR "Reporting of TURN # turned off."
?L1:	SET 'DTURNS,1
	PRINTR "Reporting of TURN # turned on."

	.FUNCT PLAYER-R
	EQUAL? PLAYER,PRSO \FALSE
	EQUAL? PRSA,V?EXAMINE \?L4
	PRINTR "You look like you're up for an adventure."
?L4:	EQUAL? PRSA,V?TAKE \FALSE
	PRINTR "That couldn't possibly work."

	.INSERT "empty_str"
	.END
